---
name: Deploy Terraform
on:
    workflow_dispatch:
    push:
        paths-ignore:
            - '**md'
    pull_request:
        branches:
            - main
        paths-ignore:
            - '**md'

env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    AWS_DEFAULT_REGION: eu-west-1
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    S3_BUCKET_NAME: simple-test-versioned-bucket

jobs:
    pre-commit:
        name: Run pre-commit
        runs-on: ubuntu-latest
        if: ${{ github.actor != 'dependabot[bot]' }}
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v3
            - uses: actions/setup-python@v4
              with:
                  python-version: '3.10'
            - name: Install Poetry
              uses: snok/install-poetry@v1
            - name: Install pre-commit
              run: |
                  python -m pip install --upgrade pip setuptools wheel
                  poetry export -f requirements.txt --output requirements.txt
                  pip install -r requirements.txt
            - name: Run pre-commit
              run: |
                  SKIP=terraform_tflint pre-commit run --all-files

    tf_fmt_lint:
        name: Format and Lint Terraform
        runs-on: ubuntu-latest
        needs: [pre-commit]
        if: ${{ github.actor != 'dependabot[bot]' }}
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v3

            - name: Set Cache Plugin Dir
              uses: actions/cache@v3
              with:
                  path: ~/.tflint.d/plugins
                  key: tflint-${{ hashFiles('.tflint.hcl') }}

            - name: Terraform Setup
              uses: hashicorp/setup-terraform@v2

            - name: Format Terraform Files
              id: fmt
              run: terraform fmt -recursive
              continue-on-error: true

            - name: Run TFlint in Docker Container
              run: |
                  docker run --rm -v $(pwd)/terraform/src:/data -t ghcr.io/terraform-linters/tflint

    s3_sync:
        name: Sync Data in S3
        runs-on: ubuntu-latest
        needs: [tf_fmt_lint]
        if: ${{ github.actor != 'dependabot[bot]' }}
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v3
            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: '3.10'
            - name: Install AWS CLI
              run: |
                  python -m pip install --upgrade pip setuptools wheel
                  pip install awscli
            - name: Sync data in S3
              run: |
                  aws s3 sync test-bucket-data 's3://$S3_BUCKET_NAME' --delete

    terraform_apply:
        name: Run Terraform Apply
        runs-on: ubuntu-latest
        needs: [s3_sync]
        if: ${{ github.actor != 'dependabot[bot]' }}
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v3

            - name: Initialize Terraform
              run: |
                  cd terraform/src
                  terraform init -backend-config=backend.hcl

            - name: Terraform Plan
              run: |
                  cd terraform/src
                  terraform plan \
                  -var 'db_username=${{ secrets.DB_USERNAME }}' \
                  -var 'db_password=${{ secrets.DB_PASSWORD }}' \
                  -var 'my_ip_addresses=${{ secrets.IP_ADDRESSES }}' \
                  -out=terraform.plan

            - name: Terraform Apply
              run: |
                  cd terraform/src &&
                  terraform apply terraform.plan
